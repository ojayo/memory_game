* { /* "CSS Reset" */
	padding: 0;
	margin: 0;
	box-sizing: border-box; 
	/* border-box shrinks content to fit height/width, rather than 
	   	adding on them outside, as it does by default ("content-box") 
	   	(does not apply to margin, only padding) */
}

body {
	height: 100vh; /* takes 100% of available height space */
	display: flex;
	background-color: #dbdbdb;
}

img {
	width: 100px;
}

h1 {
	margin: 0 auto;
	padding-bottom: 0;
	margin: bottom: 0;
	font-family: Arial, sans-serif;
	text-shadow: 2px 2px 3px white;
	font-size: 1.5em;
}

a { 
	color: #dbdbdb;
	text-decoration: none;
	}

a:hover {
	color: black;
	text-decoration: underline;
}

.container {
	margin: 0 auto;
}

/**************** The Top Info *****************/

.info-box {
	margin-top: 5px;
	position: relative;
}

#title-box {
	width: 400px;
	display: inline-block;
}

#score-box { /* Just align to bottom right */
	display: inline-block;
	width: 200px;
	margin-right: 5px;
	float: right;
	text-align: right;
	font-size: 1em;
	font-family: Futura, sans-serif;
}

#subtitle {
	font-size: .7em;
	letter-spacing: 2px;
	color: #dbdbdb;
	text-shadow: /* fancy outline */
		-1px -1px 0 #ffffff,
		1px -1px 0 #ffffff,
		-1px 1px 0 #ffffff,
		1px 1px 0 #ffffff;
}

#scoreDisplay {
	color: red;
	font-weight: bold;
}

#lowestScore {
	font-size: .6em;
	color: white;
	letter-spacing: 1px;
}

#score {
	color: white;
	letter-spacing: .5px;
}

/**************** All the cards ***************/

.card-box {
	width: 640px;
	height: 700px;
	margin: auto;
	display: flex; 
	/* this adds many more default properties, like:
	flex-item {
		flex: 1; -- says "each item will take same amount of space"
	}
	flex-container {
		flex-direction: row; -- says "items will be laid out in a row",
		flex-wrap: nowrap;  -- "just one row"
		justify-content: flex-start; -- position left-to-right
		align-items: stretch; -- and stretch across container's height
	}
	*/
	flex-wrap: wrap; /* You will almost always want to change this default */	
	
	perspective: 1000px; /* pairs with transform-style: preserve 3d*/
}

.card {
	position: relative;
	margin: 4px;
	width: calc(11.111% - 8px); /* 4 cards wide */
	height: calc(10% - 8px); /* 3 cards high */
	box-shadow: 1px 2px 2px gray;
	border-radius: 3px; 

	transform: scale(1); /* necessary in order for transform to work on :active */
	transform-style: preserve-3d; /* inserts card into 3d space - otherwise card will be flat*/
	transition: transform 1s;
}

/* add a click effect to the card. :active pseudoclass is triggered whenever element is clicked*/
.card:active { /* what happens when the card in pressed? */
	transform: scale(.9); /* shrinking effect */
	transition: transform .3s; /* makes a subtle shrinking */
}

.card:hover { /* a subtle and perhaps confusing effect */
	transform: scale(.97); 
}

.card.flip { /* no space because they are the same element */
	transform: rotateY(180deg);
}


.front, .back {
	width: 100%;
	height: 100%;
	padding: 0px;
	position: absolute; 
	/* relative to what will I position myself? 
	Which parent/grandparernt/greatgrandparent is positioned? 
	And goes to its top right corner.*/
	border-radius: 3px;
	overflow: hidden;
	backface-visibility: hidden; /* otherwise you'll see the back */
}

.front {
	transform: rotateY(180deg); /* to see it when the backface is hidden */

}

/********************* Extras ********************/

#signature {
	text-align: center;
	color: gray;
	font-family: Avenir, sans-serif;
	font-size: .75em;
	letter-spacing: 1px;
}

/* Other ideas:

A fun colorful effect when the right card is picked

A visual cue when the cards don't match

*/





